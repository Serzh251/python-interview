"""4. Написать программу, в которой реализовать две функции. В первой должен создаваться простой текстовый файл.
Если файл с таким именем уже существует, выводим соответствующее сообщение.
Необходимо открыть файл и подготовить два списка: с текстовой и числовой информацией.
Для создания списков использовать генераторы. Применить к спискам функцию zip().
Результат выполнения этой функции должен должен быть обработан и записан в файл таким образом,
чтобы каждая строка файла содержала текстовое и числовое значение. Вызвать вторую функцию.
В нее должна передаваться ссылка на созданный файл.
Во второй функции необходимо реализовать открытие файла и простой построчный вывод содержимого.
Вся программа должна запускаться по вызову первой функции."""

""" 5. Усовершенствовать первую функцию из предыдущего примера. Необходимо во втором списке часть строковых значений 
заменить на значения типа example345 (строка+число). Далее — усовершенствовать вторую функцию из предыдущего примера 
(функцию извлечения данных). Дополнительно реализовать поиск определенных подстрок в файле по следующим условиям: 
вывод первого вхождения, вывод всех вхождений. Реализовать замену всех найденных подстрок на новое значение
 и вывод всех подстрок, состоящих из букв и цифр, например: example345."""

import random
import re


def create_file(file_name):
    try:
        with open(file_name, 'x', encoding='utf-8') as f:
            list_numbers = [random.randint(-10, 10) for _ in range(10)]
            list_letters = ['example' for _ in range(10)]
            for i, el in enumerate(list_letters):
                list_letters.pop(i)
                list_letters.insert(i, (el + str(random.randint(100, 110))))
            for el in list(zip(list_letters, list_numbers)):
                f.write(str(el) + '\n')
    except FileExistsError:
        print('Файл с таким именем уже существует')
    open_file(file_name)


def open_file(file_name):
    with open(file_name, 'r', encoding='utf-8') as f:
        str_data = f.read()
        print(str_data)
        print(f'первое вхождение строки example - {str_data.find("example")}')
        str_example_all = [m.start() for m in re.finditer("example", str_data)]
        print(f'все вхождения строки example - {str_example_all}')
        str_data = re.sub(r'example10', r'simple20', str_data)
        print(f' найденные строки заменены на новые: \n {str_data}')
        print(re.findall(r'\b\w+\b', str_data))


create_file('newfile.txt')
